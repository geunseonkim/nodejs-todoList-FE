{"ast":null,"code":"var _jsxFileName = \"/Users/geunseonkim/nodeProject/todoList/todo-fe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport api from \"./utils/api\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TodoBoard from \"./components/TodoBoard\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [todoValue, setTodoValue] = useState(\"\");\n\n  const getTasks = async () => {\n    const response = await api.get('/tasks');\n    console.log(\"rrr\", response);\n    setTodoList(response.data.data);\n  };\n\n  const addTask = async () => {\n    try {\n      const response = await api.post('/tasks', {\n        task: todoValue,\n        isComplete: false\n      });\n\n      if (response.status === 200) {\n        console.log(\"success\");\n      } else {\n        throw new Error('task can not be added');\n      }\n    } catch (err) {\n      console.log(\"error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"add-item-row\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 10,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uD560\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          className: \"input-box\",\n          value: todoValue,\n          onChange: e => setTodoValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-add\",\n          onClick: addTask,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoBoard, {\n      todoList: todoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9H1ZwodhubxgRAxMMnX8NwdVE1Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/geunseonkim/nodeProject/todoList/todo-fe/src/App.js"],"names":["useEffect","useState","api","TodoBoard","Row","Col","Container","App","todoList","setTodoList","todoValue","setTodoValue","getTasks","response","get","console","log","data","addTask","post","task","isComplete","status","Error","err","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMW,QAAQ,GAAG,YAAW;AAC1B,UAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAJ,CAAQ,QAAR,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,QAAnB;AACAJ,IAAAA,WAAW,CAACI,QAAQ,CAACI,IAAT,CAAcA,IAAf,CAAX;AACD,GAJD;;AAMA,QAAMC,OAAO,GAAG,YAAW;AACzB,QAAG;AACD,YAAML,QAAQ,GAAG,MAAMX,GAAG,CAACiB,IAAJ,CAAS,QAAT,EAAmB;AACxCC,QAAAA,IAAI,EAAEV,SADkC;AAExCW,QAAAA,UAAU,EAAE;AAF4B,OAAnB,CAAvB;;AAIA,UAAIR,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;AAC3BP,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAFD,MAEO;AACL,cAAM,IAAIO,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF,KAVD,CAUE,OAAOC,GAAP,EAAY;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,GAArB;AACD;AACF,GAdD;;AAgBAxB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ;AACT,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,mDAFd;AAGE,UAAA,SAAS,EAAC,WAHZ;AAIE,UAAA,KAAK,EAAEF,SAJT;AAKE,UAAA,QAAQ,EAAGe,CAAD,IAAKd,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAET,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAIV;AAAvB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlDQD,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport api from \"./utils/api\"\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport TodoBoard from \"./components/TodoBoard\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction App() {\n  const [todoList, setTodoList] = useState([])\n  const [todoValue, setTodoValue] = useState(\"\")\n\n  const getTasks = async() => {\n    const response = await api.get('/tasks')\n    console.log(\"rrr\", response)\n    setTodoList(response.data.data)\n  }\n\n  const addTask = async() => {\n    try{\n      const response = await api.post('/tasks', {\n        task: todoValue,\n        isComplete: false\n      })\n      if (response.status === 200) {\n        console.log(\"success\")\n      } else {\n        throw new Error('task can not be added')\n      }\n    } catch (err) {\n      console.log(\"error\", err)\n    }\n  }\n\n  useEffect(() => {\n    getTasks()\n  },[])\n\n  return (\n    <Container>\n      <Row className=\"add-item-row\">\n        <Col xs={12} sm={10}>\n          <input\n            type=\"text\"\n            placeholder=\"할일을 입력하세요\"\n            className=\"input-box\"\n            value={todoValue}\n            onChange={(e)=>setTodoValue(e.target.value)}\n          />\n        </Col>\n        <Col xs={12} sm={2}>\n          <button className=\"button-add\" onClick={addTask}>추가</button>\n        </Col>\n      </Row>\n\n      <TodoBoard todoList = {todoList} />\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/geunseonkim/nodeProject/todoList/todo-fe/src/components/TodoBoard.js\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoBoard = _ref => {\n  let {\n    todoList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), todoList.length >= 0 ? todoList.map((data, idx) => /*#__PURE__*/_jsxDEV(TodoItem, {\n      data: data,\n      checkTask: checkTask\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 59\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"There is no Item to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 118\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoBoard;\nexport default TodoBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoBoard\");","map":{"version":3,"sources":["/Users/geunseonkim/nodeProject/todoList/todo-fe/src/components/TodoBoard.js"],"names":["React","TodoItem","TodoBoard","todoList","length","map","data","idx","checkTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,QAAgB;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAChC,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGA,QAAQ,CAACC,MAAT,IAAmB,CAAnB,GAAuBD,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBAAe,QAAC,QAAD;AAAoB,MAAA,IAAI,EAAED,IAA1B;AAAgC,MAAA,SAAS,EAAEE;AAA3C,OAAeD,GAAf;AAAA;AAAA;AAAA;AAAA,YAA5B,CAAvB,gBAA8G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHjH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;KAAML,S;AAWN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport TodoItem from \"./TodoItem\"\n\nconst TodoBoard = ({todoList}) => {\n  return (\n    <div>\n      <h2>Todo List</h2>\n      {/* {todoList.length >= 0 ? <TodoItem/> : <h2>There is no Item to show</h2>} */}\n      {todoList.length >= 0 ? todoList.map((data, idx) => <TodoItem key={idx} data={data} checkTask={checkTask}/>) : <h2>There is no Item to show</h2>}\n      {/* <TodoItem/> will be here once we get the todoList */}\n    </div>\n  );\n};\n\nexport default TodoBoard;\n"]},"metadata":{},"sourceType":"module"}